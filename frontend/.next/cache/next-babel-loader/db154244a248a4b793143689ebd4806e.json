{"ast":null,"code":"import axios from 'axios';\nimport { API } from '../config';\nimport cookie from 'js-cookie';\nconsole.log(`${API}/signup`);\nexport const signup = data => {\n  return axios({\n    method: 'post',\n    url: `${API}/signup`,\n    data,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(resp => {\n    console.log(resp.data);\n    return resp.data;\n  }).catch(err => err.response.data);\n};\nexport const signin = data => {\n  return axios({\n    method: 'post',\n    url: `${API}/signin`,\n    data,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(resp => {\n    console.log(resp.data);\n    return resp.data;\n  }).catch((err, response) => {\n    console.log(err, response);\n    return err.response.data;\n  });\n}; // set cookie\n\nexport const setCookie = (key, value) => {\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = key => {\n  if (false) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; // get cookie\n\nexport const getCookie = key => {\n  if (false) {\n    cookie.get(key);\n  }\n}; // localstorage\n\nexport const setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport const removeLocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n}; // autheticate user by pass data to cookie and localstorage\n\nexport const authenticate = (data, next) => {\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n};\nexport const isAuth = () => {\n  if (false) {\n    const cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/jim_z/OneDrive/Рабочий стол/blogs-app/frontend/actions/auth.ts"],"names":["axios","API","cookie","console","log","signup","data","method","url","headers","then","resp","catch","err","response","signin","setCookie","key","value","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","JSON","stringify","removeLocalStorage","removeItem","authenticate","next","token","user","isAuth","cookieChecked","getItem","parse"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { API } from '../config';\r\nimport cookie from 'js-cookie';\r\n\r\nconsole.log(`${API}/signup`);\r\n\r\nexport const signup = (data) => {\r\n  return axios({\r\n    method: 'post',\r\n    url: `${API}/signup`,\r\n    data,\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n  })\r\n  .then((resp) => {\r\n    console.log(resp.data);\r\n    return resp.data;\r\n  })\r\n  .catch((err) => err.response.data);\r\n};\r\n\r\nexport const signin = data => {\r\n  return axios({\r\n    method: 'post',\r\n    url: `${API}/signin`,\r\n    data,\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n  })\r\n  .then((resp) => {\r\n    console.log(resp.data);\r\n    return resp.data;\r\n  })\r\n  .catch((err, response) => {\r\n    console.log(err, response)\r\n    return err.response.data\r\n  });\r\n};\r\n\r\n// set cookie\r\nexport const setCookie = (key, value) => {\r\n    if (process.browser) {\r\n        cookie.set(key, value, {\r\n            expires: 1\r\n        });\r\n    }\r\n};\r\n\r\nexport const removeCookie = key => {\r\n    if (process.browser) {\r\n        cookie.remove(key, {\r\n            expires: 1\r\n        });\r\n    }\r\n};\r\n\r\n// get cookie\r\nexport const getCookie = key => {\r\n    if (process.browser) {\r\n        cookie.get(key);\r\n    }\r\n};\r\n\r\n// localstorage\r\nexport const setLocalStorage = (key, value) => {\r\n    if (process.browser) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n};\r\n\r\nexport const removeLocalStorage = key => {\r\n    if (process.browser) {\r\n        localStorage.removeItem(key);\r\n    }\r\n};\r\n\r\n// autheticate user by pass data to cookie and localstorage\r\nexport const authenticate = (data, next) => {\r\n    setCookie('token', data.token);\r\n    setLocalStorage('user', data.user);\r\n    next();\r\n};\r\n\r\nexport const isAuth = () => {\r\n    if (process.browser) {\r\n        const cookieChecked = getCookie('token');\r\n        if (cookieChecked) {\r\n            if (localStorage.getItem('user')) {\r\n                return JSON.parse(localStorage.getItem('user'));\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}